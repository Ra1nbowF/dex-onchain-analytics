version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dex_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dex_analytics
    ports:
      - "5433:5432"  # Using 5433 to avoid conflict with existing postgres
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
      - dex_postgres_data:/var/lib/postgresql/data
    networks:
      - dex_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: dex_redis
    ports:
      - "6380:6379"  # Using 6380 to avoid conflict
    networks:
      - dex_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  dex_collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dex_collector
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/dex_analytics
      REDIS_URL: redis://redis:6379
      ETHERSCAN_API_KEY: ${ETHERSCAN_API_KEY}
      PYTHONUNBUFFERED: 1
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    networks:
      - dex_network

volumes:
  dex_postgres_data:

networks:
  dex_network:
    driver: bridge
    external: false
  # Connect to existing Grafana network if needed
  grafana_network:
    external: true
    name: market-analytics_default  # Adjust to match your Grafana network name